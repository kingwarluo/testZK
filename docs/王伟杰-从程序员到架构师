1、冷热分离
    背景：客服邮箱工单数据太多，查询缓慢，后经发现一部分数据很多场景大概率用不上
    - 如何区分冷热数据
        -- 按时间维度：一个月前的工单不查询
        -- 按状态维度：已完结状态的工单不再流转
        -- 时间+状态结合：一个月前的已完结工单不再使用
    - 什么时机触发冷热数据
        -- 更新工单数据时，同步更新冷热数据
            --- 好处：数据实时更新；代码灵活可控；
            --- 不足：需要修改所有写操作的代码；无法按照时间维度来区分冷热数据，当数据需要变为冷数据时，中间可能没有任何操作；
        -- 监听mysql的binlog日志，进行冷热数据更新
            --- 好处：与业务剥离，对不熟悉的复杂业务，使用这个方案；可以做到低延时；
            --- 不足：需要考虑并发操作问题，业务代码与冷热分离同时操作一条数据；无法按照时间维度来区分冷热数据，当数据需要变为冷数据时，中间可能没有任何操作；
        -- 启动一个定时任务，进行冷热数据更新
            --- 好处：与业务代码解耦；可覆盖基于时间区分冷热数据场景；
            --- 不足：不能做到实时性；
    - 如何实现数据冷热分离
        -- 步骤：1、查询出符合条件的冷热数据；2、将数据插入冷数据库；3、将数据从热数据库中删除
            --- 问题：数据最终一致性
                 1->2时失败，需要在热数据库加个字段needColdFlag=true，在中断时可重复处理；
                 2->3时失败，需做幂等性处理，将已插入冷数据库的热数据直接删除；
            --- 问题：一次处理不完
                循环处理：
                    - 查出1000条待处理数据；
                    - 插入冷数据库
                    - 从热数据库删除
            --- 问题：大批量迁移
                计算迁移数据量，根据数据量，启用多个定时任务或启动一个任务+多线程（这里启动10个任务）
                并发问题：多线程处理到同一条数据？
                    - 增加LockThread字段作为区分，开始处理前更新LockThread字段为当前线程id
                数据处理失败问题：某一线程退出，但是还是被LockThread锁住，导致永远不处理
                    - 增加LockTime字段，判断LockThread ！= null and LockTime + 10s < 当前时间，说明是处理失败的任务
                      这里的10s需要根据迁移测试后确定。
    - 如何使用冷热分离
        一般冷热数据不能有重合的使用场景；
    - 历史数据迁移
        同冷热数据分离；

2、查询分离

3、分库分表
认证服务器

1、角色区分 -- 系统自定义，校验时根据配置来判断
2、@Primary 主要bean
3、自定义Granter授权类型
4、authenticationManager.authenticate() -> provider.authenticate() -> userDetailsService
5、http.apply(SecurityConfigurerAdapter)注入后才生效
6、AuthenticationServerConfig -> 配置令牌访问的安全约束(security) -> 定制认证失败处理器 -> 认证失败返回消息   解析令牌token url访问的安全约束
7、AuthenticationServerConfig -> 配置令牌访问的端点(endpoints) -> exceptionTranslator（针对用户名、密码异常，授权类型不支持的异常进行处理）  解析user、password
8、AuthenticationServerConfig -> 配置客户端详情(clients) -> clientDetails	解析client_id、client_security
9、通过重写方法，重新注入实体属性方式，自定义实现，如JwtAccessTokenConverter
10、token如何生成

网关服务器
1、认证、鉴权Manager
2、全局过滤器，对token的拦截，解析token放入header中，便于下游微服务获取用户信息
3、AuthenticationFilter解析token设置登录信息到request，
4、请求先到gateway -> 认证鉴权管理 -> gateway过滤器 -> springmvc过滤器 -> feign拦截器（header透传token）
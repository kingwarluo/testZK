1、dependency --> scope=test（对测试有效）、provided（对编译和测试过程都有效）
2、

pom.xml目录结构：
<project>
  <!-- pom文件的基础配置 -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.kingwraluo</groupId>
  <artifactId>webapp</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>my project maven config</name>
  <url>http://www.example.com</url>
  
  <!-- 引用的中央仓库地址 -->
  <repositories>
    <repository>
	  <id>central</id>
      <name>Maven Repository Switchboard</name>
      <layout>default</layout>
      <url>http://repo1.maven.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
	</repository>
  </repositories>

  <!-- plugin插件的配置地址 -->
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>http://repo1.maven.org/maven2</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
    </pluginRepository>
  </pluginRepositories>
  
  <build>
	<!-- directory & source -->
    <directory>${project.basedir}/target</directory>
	<!-- build里面定义的节点，可以用${}符号引用，如下面${project.build.directory} -->
    <outputDirectory>${project.build.directory}/classes</outputDirectory>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <testOutputDirectory>${project.build.directory}/test-classes</testOutputDirectory>
    <sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
    <!-- TODO: MNG-3731 maven-plugin-tools-api < 2.4.4 expect this to be relative... -->
    <scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>
    <testSourceDirectory>${project.basedir}/src/test/java</testSourceDirectory>
	
	<!-- 开发，测试，生产环境配置文件路径 -->
    <filters>
      <filter>${basedir}/src/main/filters/${env}.properties</filter>
    </filters>
    <resources>
      <resource>
        <directory>${project.basedir}/src/main/resources</directory>
		<!-- 开启过滤 -->
        <filtering>true</filtering>
      </resource>
    </resources>
	<testResources>
      <testResource>
        <directory>${project.basedir}/src/test/resources</directory>
      </testResource>
    </testResources>
	
	<!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
	<pluginManagement>		
	  <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
	  </plugins>
	</pluginManagement>
  </build>
  
  <reporting>
    <outputDirectory>${project.build.directory}/site</outputDirectory>
  </reporting>
</project>
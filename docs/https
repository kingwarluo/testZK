========================================================================================================================
https://blog.csdn.net/guanrongl/article/details/124861425
1、对称加密
容易被黑客截获密钥，消息容易被截获和篡改
2、非对称加密-防篡改
公私钥AB。公钥传输过程中，会被复制。私钥A加密后，黑客用公钥B解析，可以解锁密文。公钥B加密后，只能用私钥A解锁，黑客截获不到。
这方式保障了不会被篡改，但是消息会被截获。
3、双非对称加密-防泄漏
双方各造一对公私钥AB CD，发送时，都用公钥加密。保障了防篡改和防泄漏。但是非对称加密效率低下。
4、非对称加密+对称加密
公私钥AB，对称密钥M。先用公钥B加密对称密钥M，传输给私钥A端（公钥加密传输不会被解密）。然后私钥A端用对称密钥M加密和公钥B端通信。
保障了防篡改+防泄漏+效率问题
但是，黑客生成一对公私钥XY，黑客截获了公钥B发送过程，将公钥X发送给公钥接收方，公钥接收方收到X后，用X加密M，发送给黑客
黑客截获对称密钥M，将M用公钥B加密后，发送给私钥A端。至此，AB端所有信息都被截获
5、非对称加密+对称加密+CA机构
公私钥AB，CA机构公私钥JK。公钥先用CA机构的私钥J加密，传输给公钥B端（此时数据无法被篡改，因为黑客可以用ca机构公钥k解密获取公钥B，但是因为没有CA机构私钥J，无法自己伪造公钥）
公钥B端如果解密成功获取公钥B，则用公钥B加密对称密钥M，传输给私钥A端对称密钥。此时通信建立完成。

charles抓包：前提是客户端设置charles服务的ip为代理 & 选择信任并安装charles的ca证书。
========================================================================================================================



https://zhuanlan.zhihu.com/p/269827927

1、不可逆加密（MD5、SHA、HMAC） 排除，需要解密
2、可逆加密
    对称加密（AES、DES、3DES、IDEA、RC4、RC5、RC6）
        问题：使用同一密钥，如何不被截获（排除）
    非对称加密（RSA、DSA、ECC）
        问题：非对称加解密非常耗时。
3、https选择
    非对称加密 + 对称加密
        流程：服务端生成公私钥，客户端生成对称密钥，用服务端公钥传送给服务端，后续以对称加密方式通信。
        问题：服务端密钥以明文传给客户端，假设中间存在一个黑客，将服务端公钥截获，然后用自己生成的公私钥对发送给客户端，客户端不知道密钥真假，家对称密钥发送给黑客，黑客收到公共密钥后，在转发给服务端
        问题原因：客户端无法得知，公钥是否是网站自己的公钥。
        解决：CA证书，类似身份证。包含：证书内容的明文+签名
            1、网站域名
            2、证书持有者
            3、证书有效期
            4、证书颁发机构
            5、服务器公钥（最主要）
            6、签名时用的hash算法
            数字签名：
                1、CA机构拥有非对称加密的私钥和公钥。
                2、CA对证书明文信息进行hash。
                3、对hash后的值用私钥加密，得到数字签名。

4、为什么制作数字签名时需要hash一次？



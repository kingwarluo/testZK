#!/bin/bash

BUILD_ID=DONTKILLME

MVN_HOME="/home/obmsw.admin/apache-maven-3.5.0/bin"
LOCAL_DIR="/home/obmsw.admin/workspace"
JAR_NAME=""

backup() {
	
	echo ""
	echo "********************远程备份文件$JAR_NAME********************"
	
	ssh -i /home/obmsw.admin/aliyun.pem root@47.98.140.56 mv "$REMOTE_ROOT/$JAR_NAME $REMOTE_ROOT/$JAR_NAME.bak"
	
	if [ $? -eq 0 ]; then
		echo "********************远程备份文件完成********************"
	else
		echo "********************远程备份文件失败，不影响程序运行********************"
	fi

}

stop_app() {
	
	echo ""
	echo "********************停止服务********************"
	
	ssh -i /home/obmsw.admin/aliyun.pem root@47.98.140.56 "$REMOTE_ROOT/spring-boot.sh stop"
	
	if [ $? -eq 0 ]; then
		echo "********************停止服务完成********************"
	else
		echo "********************停止服务失败********************"
		exit 1
	fi
	
}

move() {
	
	echo ""
	echo "********************上传新jar包到$REMOTE_ROOT********************"

	scp -i /home/obmsw.admin/aliyun.pem "$JAR_NAME" "root@47.98.140.56:$REMOTE_ROOT"
	
	if [ $? -eq 0 ]; then
		echo "********************上传新jar包成功********************"
	else
		echo "********************上传新jar包失败********************"
		exit 1
	fi
	
}

start_app() {

	echo ""
	echo "********************启动应用********************"
	
	start_cmd="cd $REMOTE_ROOT && ./spring-boot.sh start"
	ssh -i /home/obmsw.admin/aliyun.pem root@47.98.140.56 $start_cmd
	
	if [ $? -eq 0 ]; then
		echo "********************启动应用成功********************"
	else
		echo "********************启动应用失败********************"
		exit 1
	fi
	
}

backup_stop_move_and_start() {

	cd "./target"
	for jar in *.jar; do
		JAR_NAME="$jar"
		break
	done

	backup
	stop_app
	move
	start_app
}

mvn_compile() {

	#先编译基础项目
	PRE_INSTALL=("./iwb-share-api" "./iwb-share-feign" "./twb-common")
	for INS in "${PRE_INSTALL[@]}"; do
	
		cd "$INS"
		echo "开始编译$INS"
		$MVN_HOME/mvn clean install -q -DskipTests
		
		if [ $? -eq 0 ]; then
			echo "$INS编译完成"
		else
			echo "$INS编译失败"
			exit 1
		fi
		
		cd ..
	done

	echo "当前目录：$(pwd)"
	#进入当前项目目录
	cd "./$ProjectName"

	#maven编译，跳过测试
	echo "开始编译$ProjectName，路径$(pwd)"
	$MVN_HOME/mvn clean package -q -DskipTests
	
	if [ $? -eq 0 ]; then
		echo "$ProjectName编译完成"
	
		backup_stop_move_and_start
	else
		echo "maven编译失败"
		exit 1
	fi
}

# 切换到本地目录
cd "$LOCAL_DIR"

GIT_REPO="ssh://jianhua.luo@172.20.30.2:29418/IWB/Cloud/IWB/iwb-share-backend"
# 检查本地目录是否存在，如果不存在则克隆仓库
if [ ! -d "$LOCAL_DIR/iwb-share-backend" ]; then
    echo "克隆Git仓库到本地目录..."
    git clone "$GIT_REPO"
	# 检查上一个命令（git clone）的退出状态
	if [ $? -eq 0 ]; then
		echo "Git仓库克隆成功！"
	
		cd "./iwb-share-backend"
		mvn_compile
	else
		echo "Git仓库克隆失败！"
		exit 1
	fi
else
    echo "更新本地Git仓库..."
    cd "./iwb-share-backend"
	git config --global --add safe.directory $(pwd)
    git pull
	
	# 检查上一个命令（git clone）的退出状态
	if [ $? -eq 0 ]; then
		echo "Git仓库拉取成功！"

		mvn_compile
	else
		echo "Git仓库拉取失败！"
		exit 1
	fi
fi